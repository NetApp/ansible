---
# netapp_eseries_iscsi/tasks/lun_mapping.yml

- name: Collect facts on the storage array
  netapp_e_facts:
    ssid: "{{ eseries_ssid }}"
    api_url: "{{ eseries_api_url }}"
    api_username: "{{ eseries_api_username }}"
    api_password: "{{ eseries_api_password }}"
    validate_certs: "{{ eseries_validate_certs | default(omit) }}"
  register: storage_array_facts

- name: Collect volume host/host group list
  set_fact:
    hosts: "{% include ([netapp_eseries_relative_template_path, 'collect_host_list.j2']|join('')) %}"

- name: Collect host/host group networking information
  setup:
  register: host_network
  delegate_to: "{{ item }}"
  delegate_facts: True
  loop: "{{ lookup('list', (hosts['expected_hosts'].keys()|list)) }}"

- name: Collect host/host group interface information for Linux
  shell: "{{ eseries_initiator_configuration[eseries_initiator_protocol]['eseries_initiator_command']['linux'] }}"
  register: host_interface_linux
  delegate_to: "{{ item }}"
  become: True
  when: hostvars[item]['ansible_facts']['system'] == "Linux"
  loop: "{{ lookup('list', (hosts['expected_hosts'].keys()|list)) }}"
  changed_when: False

- name: Collect host/host group interface information for Windows
  win_shell: "{{ eseries_initiator_configuration[eseries_initiator_protocol]['eseries_initiator_command']['windows'] }}"
  register: host_interface_windows
  delegate_to: "{{ item }}"
  when: hostvars[item]['ansible_facts']['os_family'] == "Windows"
  loop: "{{ lookup('list', (hosts['expected_hosts'].keys()|list)) }}"
  changed_when: False

- name: Aggregate host/host group interface information
  set_fact:
    host_interface: "{{ host_interface_linux['results'] + host_interface_windows['results'] }}"

- name: Organize host/host group interface information
  set_fact:
    host_information: "{% include ([netapp_eseries_relative_template_path, 'parse_host_information.j2']|join('')) %}"

- name: Create all required host groups on the storage array
  netapp_e_hostgroup:
    ssid: "{{ eseries_ssid }}"
    api_url: "{{ eseries_api_url }}"
    api_username: "{{ eseries_api_username }}"
    api_password: "{{ eseries_api_password }}"
    validate_certs: "{{ eseries_validate_certs | default(omit) }}"
    state: present
    name: "{{ item }}"
    hosts: "{{ hosts['groups'][item] | default(omit) }}"
    log_path: "{{ item.log_path | default(eseries_log_path | default(omit)) }}"
  loop: "{{ lookup('list', (hosts['groups'].keys()|list)) }}"

- name: Create all hosts objects on the storage array
  netapp_e_host:
    ssid: "{{ eseries_ssid }}"
    api_url: "{{ eseries_api_url }}"
    api_username: "{{ eseries_api_username }}"
    api_password: "{{ eseries_api_password }}"
    validate_certs: "{{ eseries_validate_certs | default(omit) }}"
    log_path: "{{ item.log_path | default(eseries_log_path | default(omit)) }}"
    state: "{{ item.state | default(omit) }}"
    name: "{{ (item | regex_replace('[.:-]', '_'))[:30] }}"
    ports: "{% include ([netapp_eseries_relative_template_path, 'port_selector.j2']|join('')) %}"
    force_port: "{{ eseries_host_force_port | default(omit) }}"
    group: "{{ hosts['expected_hosts'][item] | default(eseries_host_group | default(omit)) }}"
    host_type: "{% include ([netapp_eseries_relative_template_path, 'determine_host_type.j2']|join('')) %}"
  loop: "{{ lookup('list', (hosts['expected_hosts'].keys()|list)) }}"

- name: Map hosts and hostgroups to there respective volume
  netapp_e_lun_mapping:
    ssid: "{{ eseries_ssid }}"
    api_url: "{{ eseries_api_url }}"
    api_username: "{{ eseries_api_username }}"
    api_password: "{{ eseries_api_password }}"
    validate_certs: "{{ eseries_validate_certs | default(omit) }}"
    state: "{{ item.state | default('present') }}"
    volume_name: "{{ item.name }}"
    target: "{{ item.host | ternary((item.host | regex_replace('[.:-]', '_'))[:30], omit) }}"
  when: item.state == "present" and (item.host is defined or eseries_lun_mapping_host is defined)
  loop: "{{ storage_pool_configuration }}"
  vars:
    storage_pool_configuration: "{%include ([netapp_eseries_relative_template_path, 'generate_volume_configuration_list.j2']|join('')) %}"
