---
# netapp_eseries_iscsi/tasks/port.yml

- name: Configure controller A inventory-defined controller port definitions
  netapp_e_iscsi_interface:
    ssid: "{{ eseries_ssid }}"
    api_url: "{{ eseries_api_url }}"
    api_username: "{{ eseries_api_username }}"
    api_password: "{{ eseries_api_password }}"
    validate_certs: "{{ eseries_validate_certs | default(omit) }}"
    log_path: "{{ item.log_path | default(eseries_log_path | default(omit)) }}"
    state: "{{ item['state'] |
               default(eseries_controller_port['controller_a']['state'] |
               default(eseries_controller_port_state | default(omit))) }}"
    name: "{{ item['channel'] }}"
    controller: A
    config_method: "{{ item['config_method'] |
                       default(eseries_controller_port['controller_a']['config_method'] |
                       default(eseries_controller_port_config_method | default(omit))) }}"
    address: "{{ item['address'] | default(omit) }}"
    gateway: "{{ item['gateway'] |
                 default(eseries_controller_port['controller_a']['gateway'] |
                 default(eseries_controller_port_gateway | default(omit))) }}"
    subnet_mask: "{{ item['subnet_mask'] |
                     default(eseries_controller_port['controller_a']['subnet_mask'] |
                     default(eseries_controller_port_subnet_mask | default(omit))) }}"
    mtu: "{{ item['mtu'] |
             default(eseries_controller_port['controller_a']['mtu'] |
             default(eseries_controller_port_mtu | default(omit))) }}"
  loop: "{{ lookup('list', eseries_controller_port['controller_a']['ports'] ) }}"
  when: "eseries_controller_port is defined and eseries_controller_port['controller_a'] is defined and
         eseries_controller_port['controller_a']['ports'] is defined"

- name: Configure controller B inventory-defined controller port definitions
  netapp_e_iscsi_interface:
    ssid: "{{ eseries_ssid }}"
    api_url: "{{ eseries_api_url }}"
    api_username: "{{ eseries_api_username }}"
    api_password: "{{ eseries_api_password }}"
    validate_certs: "{{ eseries_validate_certs | default(omit) }}"
    log_path: "{{ item['log_path'] | default(eseries_log_path | default(omit)) }}"
    state: "{{ item['state'] |
               default(eseries_controller_port['controller_b']['state'] |
               default(eseries_controller_port_state | default(omit))) }}"
    name: "{{ item.channel }}"
    controller: B
    config_method: "{{ item['config_method'] |
                       default(eseries_controller_port['controller_b']['config_method'] |
                       default(eseries_controller_port_config_method | default(omit))) }}"
    address: "{{ item['address'] | default(omit) }}"
    gateway: "{{ item['gateway'] |
                 default(eseries_controller_port['controller_b']['gateway'] |
                 default(eseries_controller_port_gateway | default(omit))) }}"
    subnet_mask: "{{ item['subnet_mask'] |
                     default(eseries_controller_port['controller_b']['subnet_mask'] |
                     default(eseries_controller_port_subnet_mask | default(omit))) }}"
    mtu: "{{ item['mtu'] |
             default(eseries_controller_port['controller_b']['mtu'] |
             default(eseries_controller_port_mtu | default(omit))) }}"
  loop: "{{ lookup('list', eseries_controller_port['controller_b']['ports']) }}"
  when: "eseries_controller_port is defined and eseries_controller_port['controller_b'] is defined and
         eseries_controller_port['controller_b']['ports'] is defined"

- name: Configure iSCSI discovery parameters
  netapp_e_iscsi_target:
    ssid: "{{ eseries_ssid }}"
    api_url: "{{ eseries_api_url }}"
    api_username: "{{ eseries_api_username }}"
    api_password: "{{ eseries_api_password }}"
    validate_certs: "{{ eseries_validate_certs | default(omit) }}"
    log_path: "{{ eseries_log_path | default(omit) }}"
    name: "{{ eseries_target_name | default(omit) }}"
    chap_secret: "{{ eseries_target_chap_secret_update | ternary(eseries_target_chap_secret, omit) }}"
    ping: "{{ eseries_target_ping | default(omit) }}"
    unnamed_discovery: "{{ eseries_target_unnamed_discovery | default(omit) }}"
  when: ((eseries_target_chap_secret is defined and eseries_target_chap_secret_update) or
         eseries_target_name is defined or eseries_target_ping is defined or
         eseries_target_unnamed_discovery is defined)
