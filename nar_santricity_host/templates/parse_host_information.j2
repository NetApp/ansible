{#- This Jinja template parses out host information from Ansible gathered facts, eseries* variables and then adds
        initiator information from the host_interface variable. The host_interface variable should the response
        from a shell command module and should have the following structure:
            {..., "stdout_lines": ["iqn.1998-01.com.example:name1", "iqn.1998-01.com.example:name2"], ...}
#}

{%- set output = {} %}

{%- for host in (hosts["expected_hosts"].keys()|list) %}

  {#- *** Add host information to host key *** #}
  {%- for result in host_network.results %}

    {#- *** Compile dictionary containing host facts *** #}
    {%- if output.update({host: {"hostname": result["ansible_facts"]["ansible_hostname"],
                                   "fqdn": result["ansible_facts"]["ansible_fqdn"],
                                   "os_distribution": result["ansible_facts"]["ansible_distribution"],
                                   "os_version": result["ansible_facts"]["ansible_distribution_version"],
                                   "os_type": result["ansible_facts"]["ansible_system"],
                                   "ports": []} }) %}
    {%- endif %}
  {%- endfor %}

  {#- *** Update SAS addresses to ensure that all phy channels are specified (more is okay). *** #}
  {%- if eseries_initiator_protocol == "sas" %}

    {%- for result in host_interface %}
      {%- if result.item == host and "stdout_lines" in (result.keys()|list)%}
        {%- for address in result["stdout_lines"] %}
          {%- for index in ["0", "1", "2", "3", "4", "5", "6", "7"] %}
            {%- set sanitized_host = host.replace(".", "_").replace(":","_").replace("-", "_")[:20] %}
            {%- if output[host]["ports"].append({"available": True, "port": {"type": eseries_initiator_protocol,
                                                                               "label": ([sanitized_host,
                                                                                          eseries_initiator_protocol,
                                                                                          loop.index]|join("_")),
                                                                               "port": (address[:-1] + index)}}) %}{%- endif %}
          {%- endfor %}
        {%- endfor %}
      {%- endif %}
    {%- endfor %}

  {%- else %}

      {#- *** Add interface information to the host key *** #}
      {%- for result in host_interface %}
        {%- if result.item == host and "stdout_lines" in (result.keys()|list)%}
          {%- for line in result["stdout_lines"] %}
            {%- set sanitized_host = host.replace(".", "_").replace(":","_").replace("-", "_")[:20] %}
            {%- if output[host]["ports"].append({"available": True, "port": {"type": eseries_initiator_protocol,
                                                                               "label": ([sanitized_host,
                                                                                          eseries_initiator_protocol,
                                                                                          loop.index]|join("_")),
                                                                               "port": line}}) %}{%- endif %}
          {%- endfor %}
        {%- endif %}
      {%- endfor %}
  {%- endif %}
{%- endfor %}
{{ output }}
