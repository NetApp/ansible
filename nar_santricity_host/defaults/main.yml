# THIS IS A COMPREHENSIVE VARIABLE LIST

# Storage System Credentials for Interacting with Web Services REST API
# ---------------------------------------------------------------------
eseries_ssid: 1                                          # Storage array identifier. This value will be 1 when interacting with the embedded web services,
                                                         #     otherwise the identifier will be defined on the web services proxy.
#eseries_api_url: https://192.168.10.100/devmgr/v2       # Url for the web services api. Example: https://192.168.10.100/devmgr/v2
#eseries_api_username: admin                             # Username for the web services api.
#eseries_api_password: password                          # Password for the web services api.
#eseries_validate_certs: False                           # Whether the SSL certificates should be verified. (boolean)


# Storage Pool Default Policy Specifications
# ------------------------------------------
eseries_storage_pool_state: present                      # Default storage pool state. Choices: present, absent
eseries_storage_pool_raid_level: raidDiskPool            # Default volume raid level. Choices: raid0, raid1, raid5, raid6, raidDiskPool
eseries_storage_pool_secure_pool: no                     # Default for storage pool drive security. This flag will enable the security at rest feature. There
                                                         #    must be sufficient FDE or FIPS security capable drives. Type: boolean
#eseries_storage_pool_criteria_drive_count:              # Default storage pool drive count.
#eseries_storage_pool_reserve_drive_count:               # Default reserve drive count for drive reconstruction for storage pools using dynamic disk pool and
                                                         #    the raid level must be set for raidDiskPool.
#eseries_storage_pool_criteria_min_usable_capacity:      # Default minimum required capacity for storage pools.
#eseries_storage_pool_criteria_drive_type:               # Default drive type for storage pools. Choices: hdd, ssd
eseries_storage_pool_criteria_size_unit: gb              # Default unit size for all storage pool related sizing.
                                                         #    Choices: bytes, b, kb, mb, gb, tb, pb, eb, zb, yb
#eseries_storage_pool_criteria_drive_min_size:           # Default minimum drive size for storage pools.
#eseries_storage_pool_criteria_drive_require_da:         # Default for whether storage pools are required to have data assurance (DA) compatible drives.
                                                         #    Type: boolean
#eseries_storage_pool_criteria_drive_require_fde:        # Default for whether storage pools are required to have drive security compatible drives.
                                                         #    Type: boolean
#eseries_storage_pool_remove_volumes:                    # Default policy for deleting volumes prior to removing storage pools.
#eseries_storage_pool_erase_secured_drives:              # Default policy for erasing the content drives during create and delete storage pool operations.
                                                         #    Type: boolean

# Volume Default Policy Specifications
# ------------------------------------
eseries_volume_state: present                        # Default volume state. Choices: present, absent
eseries_volume_size_unit: gb                         # Default unit size for all volume sizing options.
#eseries_volume_size:                                # Default volume size or the presented size for thinly provisioned volumes.
#eseries_volume_data_assurance_enabled:              # Default for whether data assurance(DA) is required to be enabled.
#eseries_volume_segment_size_kb:                     # Default segment size measured in kib.
#eseries_volume_read_cache_enable:                   # Default for read caching which will cache all read requests.
#eseries_volume_read_ahead_enable:                   # Default for read ahead caching; this is good for sequential workloads to cache subsequent blocks.
#eseries_volume_write_cache_enable:                  # Default for write caching which will cache all writes.
#eseries_volume_thin_provision:                      # Default for whether volumes should be thinly provisioned.
#eseries_volume_thin_volume_repo_size:               # Default for actually allocated space for thinly provisioned volumes.
#eseries_volume_thin_volume_max_repo_size:           # Default for the maximum allocated space allowed for thinkly provisioned volumes.
#eseries_volume_thin_volume_expansion_policy:        # Default thin volume expansion policy. Choices: automatic, manual
#eseries_volume_thin_volume_growth_alert_threshold:  # Default thin volume growth alert threshold; this is the threshold for when the thin volume expansion
                                                     #    policy will be enacted. Allowable values are between and including 10% and 99%
#eseries_volume_ssd_cache_enabled:                   # Default for ssd cache which will enable the volume to use an existing SSD cache on the storage array.
#eseries_volume_host:                                # Default host for all volumes; the value can be any host from the Ansible inventory. Any initiator may be
                                                     #    used whether connected or not since the storage array does not require connectivity in order to create
                                                     #    host objects.
#eseries_volume_workload_name:                       # Default workload tag name
#eseries_volume_metadata:                            # Default metadata


# Storage Pool-Volume Mapping Default Policy Specifications
# ---------------------------------------------------------
eseries_lun_mapping_state: present       # Generally specifies whether a LUN mapping should be present. This is useful when adding a default host for all
                                         #    volumes. Choices: present, absent
#eseries_lun_mapping_host:               # Default host for all volumes not specifically give a host either in common_volume_configuration or in
                                         #    eseries_storage_pool_configuration.


# Controller Interface Port Default Policy Specifications
# -------------------------------------------------------
eseries_controller_port_state: enabled              # Generally specifies whether a controller port definition should be applied Choices: enabled, disabled
eseries_controller_port_config_method: dhcp         # General port configuration method definition for both controllers. Choices: static, dhcp
#eseries_controller_port_gateway:                   # General port IPv4 gateway for both controllers.
#eseries_controller_port_subnet_mask:               # General port IPv4 subnet mask for both controllers.
eseries_controller_port_mtu: 9000                   # General port maximum transfer units (MTU) for both controllers. Any value greater than 1500 (bytes).
#eseries_controller_port:
#  controller_a:                                    # Controller A port definition.
#    state:                                         # General definitions for all ports on controller A. Any option specified in the ports definition can be
                                                    #     specified here to generalize for all controller A ports.
#    config_method:                                 # Port configuration method Choices: static, dhcp
#    address:                                       # Port IPv4 address
#    gateway:                                       # Port IPv4 gateway
#    subnet_mask:                                   # Port IPv4 subnet_mask
#    ports:                                         # List containing ports definitions
#      - channel:                                   # Channel of the port to modify. This will be a numerical value that represents the port; typically read
                                                    #     left to right on the HIC.
#        state:                                     # Whether the port should be enabled.
#        config_method:                             # Port configuration method Choices: static, dhcp
#        address:                                   # Port IPv4 address
#        gateway:                                   # Port IPv4 gateway
#        subnet_mask:                               # Port IPv4 subnet_mask
#  controller_b:                                    # Controller B port definition.
#    state:                                         # General definitions for all ports on controller B. Any option specified in the ports definition can be
                                                    #     specified here to generalize for all controller A ports.
#    config_method:                                 # Port configuration method Choices: static, dhcp
#    address:                                       # Port IPv4 address
#    gateway:                                       # Port IPv4 gateway
#    subnet_mask:                                   # Port IPv4 subnet_mask
#    ports:                                         # List containing ports definitions
#      - channel:                                   # Channel of the port to modify. This will be a numerical value that represents the port; typically read
                                                    #     left to right on the HIC.
#        state:                                     # Whether the port should be enabled.
#        config_method:                             # Port configuration method Choices: static, dhcp
#        address:                                   # Port IPv4 address
#        gateway:                                   # Port IPv4 gateway
#        subnet_mask:                               # Port IPv4 subnet_mask


# Target Discovery Default Policy Specifications
# ----------------------------------------------
#eseries_target_name:                         # iSCSI target name
eseries_target_ping: True                     # Enables ICMP ping response from the configured iSCSI ports (boolean)
eseries_target_unnamed_discovery: True        # Whether the iSCSI target iqn should be returned when an initiator performs a discovery session.
eseries_target_chap_secret:                   # iSCSI chap secret. When left blank, the chap secret will be removed from the storage system.
eseries_target_chap_secret_update: False      # DO NOT REMOVE! Since netapp_e_iscsi_target cannot compare the chap secret with the current and chooses to always
                                              #     return changed=True, this flag is used to force the module to update the chap secret. It is preferable to
                                              #     leave this value False and to add the --extra-vars "eseries_target_chap_secret_update=True".

# Host Default Policy Specifications
# ----------------------------------
eseries_host_force_port: True                 # Default for whether ports are to be allowed to be re-assigned (boolean)
eseries_host_remove_unused_hostgroup: True    # Forces any unused groups to be removed
#eseries_host_object:
#  - name:                                    # Host label as referenced by the storage array.
#    state:
#    host_type:                               # Windows (non-clustering) 1, Windows (clustering) 6, Vmware 10, Linux (using kernal 3.10 and later) 28
#    group:                                   # Host's host group
#    ports:                                   # List of port definitions
#      - type:                                # Port protocol definition (iscsi, fc, sas, ib, nvme)
#        label:                               # Arbitrary port label
#        port:                                # Port initiator (iqn, wwn, etc)


# Storage Pool-Volume Default Policy Specifications
# -------------------------------------------------
#   Name schemes: Storage pool and volume names can be used to specify a naming scheme to produce a list of storage pools and volumes. The scheme are defined by
#                 brackets and can be used to specify a range of lowercase letters, uppercase letters, range of single digit numbers, any top-level inventory
#                 variables, and the current defined storage pool (volume only).

#eseries_storage_pool_configuration:
#  - name:                         # Name or name scheme (see above) for the storage pool.
#    state:                        # Specifies whether the storage pool should exist (present, absent). When removing an existing storage array all of the
                                   #    volumes must be defined with state=absent.
#    raid_level                    # Volume group raid level. Choices: raid0, raid1, raid5, raid6, raidDiskPool (Default: raidDiskPool)
#    secure_pool: no               # Default for storage pool drive security. This flag will enable the security at rest feature. There must be sufficient FDE
                                   #    or FIPS security capable drives. Type: boolean
#    criteria_drive_count:         # Default storage pool drive count.
#    reserve_drive_count:          # Default reserve drive count for drive reconstruction for storage pools using dynamic disk pool and the raid level must be
                                   #    set for raidDiskPool.
#    criteria_min_usable_capacity: # Default minimum required capacity for storage pools.
#    criteria_drive_type:          # Default drive type for storage pools. Choices: hdd, ssd
#    criteria_size_unit: gb        # Default unit size for all storage pool related sizing. Choices: bytes, b, kb, mb, gb, tb, pb, eb, zb, yb
#    criteria_drive_min_size:      # Default minimum drive size for storage pools.
#    criteria_drive_require_da:    # Default for whether storage pools are required to have data assurance (DA) compatible drives. Type: boolean
#    criteria_drive_require_fde:   # Default for whether storage pools are required to have drive security compatible drives. Type: boolean
#    remove_volumes:               # Default policy for deleting volumes prior to removing storage pools.
#    erase_secured_drives:         # Default policy for erasing the content drives during create and delete storage pool operations. Type: boolean
#    common_volume_configuration:  # Any option that can be specified at the volume level can be generalized here at the storage pool level. This is useful when
                                   #    all volumes share common configuration definitions.
#    volumes:                      # List of volumes associated the storage pool.
#      - state:                    # Specifies whether the volume should exist (present, absent)
#        name:                     # (required) Name or name scheme (see above) for the volume(s) to be created in the storage pool(s)
#        host:                     # host or host group for the volume should be mapped to.
#        size:                     # Size of the volume or presented size of the thinly provisioned volume.
#        size_unit:                # Unit size for the size, thin_volume_repo_size, and thin_volume_max_repo_size
                                   #    Choices: bytes, b, kb, mb, gb, tb, pb, eb, zb, yb
#        workload_name:            # Name of the volume's workload. This can be defined using the metadata option or, if already defined, specify one already
                                   #    created on the storage array.
#        metadata:                 # Dictionary containing arbitrary entries normally used for defining the volume(s) workload.


# Initiator-Target Protocol Variable Defaults
# -------------------------------------------
#   Note that the following commands produce a unique list of IQNs or WWNs of the interfaces used, line separated.
eseries_initiator_protocol: iscsi     # This variable defines which protocol the storage array will use. Choices: iscsi, fc, sas
eseries_initiator_configuration:
  fc:
    eseries_skip_port_task: True
    eseries_initiator_command:
      linux: "systool -c fc_host -v | grep port_name | cut -d '\"' -f 2 | cut -d 'x' -f 2 | sort | uniq"
      windows: "(Get-InitiatorPort | Where-Object -P ConnectionType -EQ 'Fibre Channel' |
       Select-Object -Property PortAddress | Format-Table -AutoSize -HideTableHeaders | Out-String).trim()"
  iscsi:
    eseries_skip_port_task: False
    eseries_initiator_command:
      linux: "cat /etc/iscsi/initiatorname.iscsi | grep iqn. | cut -d'=' -f 2 && iscsiadm -m iface | grep iqn. |
       cut -d',' -f 5 | sort | uniq"
      windows: "(get-initiatorPort | select-object -property nodeaddress | sort-object | get-unique | ft -autoSize |
       out-string -stream | select-string iqn | out-string).trim()"
  sas:
    # NetApp IMT for SAS attached E-Series SAN hosts recommends adding all possible SAS addresses with the base address
    # starting at 0, and the last address ending in 3 for single port HBAs, or 7 for dual port HBAs. Since determining
    # single vs . dual port HBAs adds complexity, we always add all 8 possible permutations of the SAS address.
    eseries_skip_port_task: True
    eseries_initiator_command:
      linux: "systool -c scsi_host -v | grep host_sas_address | cut -d '\"' -f 2 | cut -d 'x' -f 2"
      windows: "(Get-InitiatorPort | Where-Object -P ConnectionType -EQ 'SAS' | Select-Object -Property PortAddress |
       Format-Table -AutoSize -HideTableHeaders | Out-String).trim()"


# Paths necessary for the role operations and maintains compatibility with previous version of Ansible.
# -----------------------------------------------------------------------------------------------------
netapp_eseries_relative_path: "{{ (role_path|replace(playbook_dir, '.')) }}"
netapp_eseries_relative_template_path: "{{ netapp_eseries_relative_path + '/templates/' }}"

# Ansible Specific Variable Defaults
# ----------------------------------
ansible_connection: local