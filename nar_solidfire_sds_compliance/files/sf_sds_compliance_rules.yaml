---
# Rules file for HCL compliance

## When editing this rules file make sure to update molecule/default/sample_facts_*.yaml, and molecule/expect-fail/sample_facts_incorrect.yaml

## Explanation of object fields
# <config-name>
#   "<IMT Field Name>":
#     displayName:
#       - "<IMT Field Data>"
#     components:
#       "<Component to Check>":
#         expected: "<expected value>"
#         count: <optional expected count>
#         query: "<JMESPath query against fact to be checked>"
#         actual: 
#       "<Component to Check>":
#         expected: "<expected value>"
#         query: "<JMESPath query against fact to be checked>"
#
# The IMT data can be generated from this file using the IMT fields explained above.
### Current IMT data should look like this:  ###
#
# Server Instance: ‘HPE ProLiant DL360 Gen10’
# Service Pack: ‘SPP 2020.03.00’
# Processor: ‘2x Intel(R) Xeon(R) Gold 5218’
# Available Memory: ‘768 GB’
# Storage Drives: ‘9x 3.84 TB NVMe Drives’
# Storage Drive FW: ‘HPK1’ or 'MPK70H5Q'
# Cache Device: ‘1x 384 GB Intel Optane SSD’
# Cache Device FW: ‘4ICSHPK2’
# Host OS: ‘RHEL Server 7.6 64-bit’
# Element OS: ‘Element 12.2’
# Cluster Management NIC: ‘2x Intel 10G X550T’
# Storage NIC: ‘2x Mellanox 25G ConnectX-4 Lx’

esds-hpe-dl360-gen10-p1:
  rules:
    "Server Instance":
      displayName:
        - "HPE ProLiant DL360 Gen10"
      components:
        "system_vendor":
          expected: "HPE"
          query: "system_vendor == `{expected}`"
          actual: "system_vendor"
        "product_name":
          expected: "ProLiant DL360 Gen10"
          query: "contains(product_name, `{expected}`)"
          actual: "product_name"

    "Service Pack":
      displayName:
        - "SPP 2020.03.00"
      components:
        "bios_version":
          expected: "U32"
          query: "bios_version == `{expected}`"
          actual: "bios_version"
        "management_nic_firmware":
          expected: "10.51.3" 
          count: 2
          query: "ansible_local.sf_nic_details[?driver == `ixgbe`].firmware_version | [?contains(`{expected}`, @)] | length(@) == `{count}`"
          actual: "ansible_local.sf_nic_details[?driver == `ixgbe`].firmware_version"
        "storage_nic_firmware":
          expected: "14.26.1040"
          count: 2
          query: "ansible_local.sf_nic_details[?driver == `mlx5_core`].firmware_version | [?contains(@, `{expected}`)] | length(@) == `{count}`"
          actual: "ansible_local.sf_nic_details[?driver == `mlx5_core`].firmware_version"
        "storage_drive_firmware":
          expected: ["HPK1 ", "MPK70H5Q", "4ICRHPK0"]
          count: 9
          query: "ansible_local.sf_drive_fw[] | [?contains({expected}, @)] | length(@) == `{count}`"
          actual: "ansible_local.sf_drive_fw[]"
        "cache_drive_firmware":
          expected: "4ICSHPK2" 
          count: 1
          query: "ansible_local.sf_drive_fw[] | [?contains(`{expected}`, @)] | length(@) == `{count}`"
          actual: "ansible_local.sf_drive_fw[]"

    "Processor":
      displayName: 
        - "2x Intel(R) Xeon(R) Gold 5218"
      components:
        "processor_cores":
          expected: 16 
          query: "processor_cores == `{expected}`"
          actual: "processor_cores"
        "processor_count":
          expected: 2 
          query: "processor_count == `{expected}`"
          actual: "processor_count"
        "processor":
          expected: "Intel(R) Xeon(R) Gold 5218 CPU @ 2.30GHz"
          count: 64
          query: "processor | [?contains(@, `{expected}`)] | length(@) == `{count}`"
          actual: "processor"

    "Available Memory":
      displayName: 
        - "768 GB"
      components:
        "memtotal_mb":
          expected: 770000
          query: "memtotal_mb >= `{expected}`"
          actual: "memtotal_mb"

    "Storage Drives":
      displayName: 
        - "9x 3.84 TB NVMe Drives"
      components:
        "storage_drives":
          expected: ["VK003840KWWFP", "MZXL53T8HBLS-000H3", "VO004000KWVUR"]
          count: 9
          query: "devices.*.model[] | [?contains({expected}, @)] | length(@) == `{count}`"
          actual: "devices.*.model[]"

    "Cache Device":
      displayName: 
        - "1x 384 GB Intel Optane SSD"
      components:
        "cache_drive":
          expected: "EO000375KWJUC"
          count: 1
          query: "devices.*.model[] | [?contains(`{expected}`, @)] | length(@) == `{count}`"
          actual: "devices.*.model[]"

    "Host OS":
      displayName: 
        - "RHEL Server 64-bit"
      components:
        "distribution":
          expected: "RedHat" 
          query: "distribution == `{expected}`"
          actual: "distribution"
        "distribution_version":
          expected: ["7.6", "7.7", "8.2"]
          query: "contains(`{expected}`, distribution_version)"
          actual: "distribution_version"
        "architecture":
          expected: "x86_64" 
          query: "architecture == `{expected}`"
          actual: "architecture"

    "Element OS":
      displayName: 
        - "Element 12.2" 

    "Cluster Management NIC":
      displayName: 
        - "2x Intel 10G X550T"
      components:
        "management_nic":
          expected: "ixgbe"
          count: 2
          query: "ansible_local.sf_nic_details[].driver | [?contains(`{expected}`, @)] | length(@) == `{count}`"
          actual: "ansible_local.sf_nic_details[].driver"

    "Storage NIC":
      displayName: 
        - "2x Mellanox 25G ConnectX-4 Lx"
      components:
        "storage nic":
          expected: "mlx5_core"
          count: 2
          query: "ansible_local.sf_nic_details[].driver | [?contains(`{expected}`, @)] | length(@) == `{count}`"
          actual: "ansible_local.sf_nic_details[].driver"

    "Network Interface Name Length":
      displayName:
        - "Network interface intended to be used as Management interface should have name length <= 13."
        - "Similarly, network interface intended to be used as Storage interface should have name length <= 8"
        - "IGNORE, if the interfaces that failed the checks are not intended to be used as Management/Storage interfaces"
      components:
        "Interfaces that are not compliant to be used as Management interface":
          expected: 0
          query: "interfaces[?length(@)>=`13`] | length(@) == `{expected}`"
          actual: "interfaces[?length(@)>=`13`]"

        "Interfaces that are not compliant to be used as Storage interface":
          expected: 0
          query: "interfaces[?length(@)>=`8`] | length(@) == `{expected}`"
          actual: "interfaces[?length(@)>=`8`]"